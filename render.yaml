# render.yaml
# This file defines your infrastructure on Render.com.
# https://render.com/docs/render-yaml

# ========================
# 1. PostgreSQL Database Service Definition
# This section defines the database that Render will provision and manage.
# ========================
databases:
  - name: cybershieldx-db # This is the unique name for this database service within Render blueprint.
                          # Your web service will link to this name.
    region: ohio # IMPORTANT: Must be the same region as your web service.
    plan: free   # Or 'starter', 'standard', etc. based on your needs.
    databaseName: cybershieldx # The actual name of the database within PostgreSQL.
    user: cybershieldx_user    # The default PostgreSQL username for your app.
    # Render will automatically generate a strong password for this user
    # and expose the DATABASE_URL to linked services.


# ========================
# 2. Backend Web Service Definition
# This section defines your FastAPI application.
# ========================
services:
  - type: web
    name: cybershieldx-backend
    env: python
    region: ohio # IMPORTANT: Must be the same region as your database service.
    plan: starter # You can choose 'free', 'starter', 'standard', etc.

    # --- Build and Start Commands ---
    buildCommand: "./build.sh" # Replace with your actual build script or 'pip install -r requirements.txt'
    startCommand: "uvicorn app.main:app --host 0.0.0.0 --port $PORT" # Adjust 'app.main:app' to your actual FastAPI app entrypoint

    # --- Environment Variables for the Web Service ---
    envVars:
      # ========================
      # APP CORE CONFIGURATION
      # ========================
      - key: APP_NAME
        value: "CYBERSHIELDx API"
      - key: VERSION
        value: "1.0.1"
      - key: ENVIRONMENT
        value: "PROD" # CRITICAL: Set to PROD for production environment
      - key: BACKEND_URL
        value: "https://cybershieldx-backend.onrender.com" # !!! IMPORTANT: Update with your actual Render URL AFTER deployment
      - key: FRONTEND_URL
        value: "https://your-frontend-service.onrender.com" # !!! IMPORTANT: Update with your actual frontend URL AFTER deployment
      - key: DEBUG
        value: "false" # Must be false in production

      # ========================
      # SECURITY CONFIGURATION
      # ========================
      - key: SECRET_KEY
        sync: false # Set this value manually in Render dashboard for security
      - key: ALGORITHM
        value: "HS256"
      - key: ACCESS_TOKEN_EXPIRE_MINUTES
        value: "15"
      - key: REFRESH_TOKEN_EXPIRE_DAYS
        value: "7"
      - key: REMEMBER_ME_REFRESH_TOKEN_EXPIRE_DAYS
        value: "15"
      - key: PASSWORD_RESET_TIMEOUT
        value: "600"
      - key: PASSWORD_HISTORY_COUNT
        value: "3"
      - key: MIN_PASSWORD_LENGTH
        value: "8"
      - key: PASSWORD_HISTORY_CHECK_COUNT
        value: "5"
      - key: ACCOUNT_LOCKOUT_ATTEMPTS
        value: "5"
      - key: ACCOUNT_LOCKOUT_DURATION_MINUTES
        value: "30"
      - key: REQUIRE_EMAIL_VERIFICATION
        value: "true"
      - key: API_RATE_LIMIT_PER_MINUTE
        value: "100"
      - key: OTP_LENGTH
        value: "6"
      - key: OTP_EXPIRATION_MINUTES
        value: "5"
      - key: TOTP_PERIOD
        value: "30"
      - key: TOTP_DIGITS
        value: "6"
      - key: MFA_OTP_EXPIRE_MINUTES
        value: "5"
      - key: MFA_OTP_LENGTH
        value: "6"
      - key: MFA_CHALLENGE_TOKEN_EXPIRE_MINUTES
        value: "5"
      - key: MFA_EMAIL_TOKEN_EXPIRE_MINUTES
        value: "15"
      - key: ADMIN_REGISTRATION_CODE
        value: "73104422" # Consider setting to null or a different value for production if not needed
      - key: USER_REGISTRATION_CODE
        value: "N/A" # Consider setting to null for open registration

      # ========================
      # DATABASE CONFIGURATION (URL injected by Render)
      # This is the correct way to link to a Render-managed database
      # Render will set DATABASE_URL using the connection string from 'cybershieldx-db'
      # ========================
      - key: DATABASE_URL
        fromDatabase:
          name: cybershieldx-db # This name MUST match the 'name' given to your database service above.
          property: connectionString

      - key: DB_POOL_SIZE
        value: "10"
      - key: DB_POOL_TIMEOUT
        value: "30"
      - key: DB_POOL_RECYCLE
        value: "3600"

      # ========================
      # EMAIL SERVICE CONFIG
      # ========================
      - key: MAIL_SERVER
        value: "smtp.gmail.com"
      - key: MAIL_PORT
        value: "587"
      - key: MAIL_USERNAME
        sync: false # Set this value manually in Render dashboard
      - key: MAIL_PASSWORD
        sync: false # Set this value manually in Render dashboard
      - key: MAIL_FROM
        value: "cybershieldv@gmail.com"
      - key: MAIL_TLS
        value: "true"
      - key: MAIL_SSL
        value: "false"
      - key: USE_CREDENTIALS
        value: "true"
      - key: VALIDATE_CERTS
        value: "true"
      - key: EMAIL_VERIFICATION_TIMEOUT
        value: "60"

      # ========================
      # LOGGING CONFIGURATION
      # ========================
      - key: LOG_LEVEL
        value: "INFO"
      - key: LOG_FILE_PATH
        value: "" # Set to empty string or null for production stdout/stderr logging
      - key: LOG_FORMAT
        value: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
      - key: ENABLE_ADMIN_LOGS
        value: "true"
      - key: CLEANUP_INTERVAL_SECONDS
        value: "3600"
      - key: CLEANUP_RETENTION_HOURS
        value: "24"


      # ========================
      # FEATURE FLAGS
      # ========================
      - key: REQUIRE_ADMIN_APPROVAL
        value: "false"
      - key: ENABLE_RATE_LIMITING
        value: "true"

      # ========================
      # CORS ORIGINS
      # ========================
      # IMPORTANT: This must be a JSON array string for pydantic to parse it correctly
      - key: CORS_ORIGINS
        value: '["https://your-frontend-service.onrender.com", "http://localhost:3000"]' # !!! IMPORTANT: Update with your actual frontend URL. Add localhost for testing if needed.

      # ========================
      # SECURITY TOOLS API KEYS
      # ========================
      - key: VIRUSTOTAL_API_KEY
        sync: false # Set this value manually in Render dashboard
      - key: ABUSEIPDB_API_KEY
        sync: false # Set this value manually in Render dashboard
      - key: IPAPI_API_KEY
        sync: false # Set this value manually in Render dashboard
